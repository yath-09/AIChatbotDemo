generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Main documents table to track uploaded documents
model Document {
  id          String   @id @default(uuid())
  title       String?  // Optional document title
  filename    String?  // Original filename for uploaded documents
  contentType String   // "text" or "pdf" or other types
  s3Key       String?  // S3 storage key/path
  s3Bucket    String?  // S3 bucket name
  s3Region    String?  // S3 region
  pineconeNamespace String? // Namespace in Pinecone where chunks are stored
  chunkCount  Int      @default(0) // Number of chunks this document was split into
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([contentType])
  @@map("documents")
}

// For tracking chat history
model ChatHistory {
  id        String   @id @default(uuid())
  userId    String?  // Optional user ID if authentication is implemented
  sessionId String   // Session identifier
  query     String   @db.Text // User's question
  response  String   @db.Text // System's response
  createdAt DateTime @default(now())

  @@index([userId, sessionId])
  @@map("chat_history")
}

// Users table if authentication is needed
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}